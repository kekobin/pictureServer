// Generated by CoffeeScript 1.7.1
(function() {
  var express, flash, fs, mongoStore, path;

  express = require('express');

  path = require('path');

  fs = require('fs');

  var ejs = require('ejs');

  mongoStore = require('connect-mongo')(express);

  flash = require('connect-flash');

  module.exports = function(app, config) {
    app.set('port', process.env.PORT || 10098);
    app.set('views', config.root + '/app/view');
    app.engine('.html', ejs.__express);
    app.set('view engine', 'html');
    app.use(flash());
    app.use(express.favicon());
    app.use(express.logger('dev'));
    app.use(express.bodyParser({
      uploadDir: './uploads'
    }));
    app.use(express.methodOverride());
    app.use(express.cookieParser('your secret here'));
    app.use(express["static"](config.root + '/app/public'));
    app.use(express["static"](config.root + '/uploads'));
    app.use(app.router);
    app.use(express.compress({
      filter: function(req, res) {
        return /json|text|javascript|css/.test(res.getHeader('Content-Type'));
      },
      level: 9
    }));

    app.get('/', function(req, res) {
      res.render('index', {
        title: 'hello'
      });
    });

    app.post('/files/upload', function(req, res) {
      var path = req.files.Filedata.path;
      fs.renameSync(path, "./uploads/"+ req.files.Filedata.name);//重新给存入uploads目录下的文件命名/
      var fileid = path.substring(path.length - 32, path.length);
      var temp = {
        name: req.files.Filedata.name,
        tempid: fileid
      };

      res.send(temp);
    });



    if ('development' === app.get('env')) {
      app.use(express.errorHandler());
    }
    if ('production' === app.get('env')) {
      return app.use(express.errorHandler());
    }
  };

}).call(this);